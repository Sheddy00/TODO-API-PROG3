openapi : 3.0.3
info:   
  title: Revision API
  version: 1.0.0
  description: STD22012
servers: 
  - url: https://revision.com
paths:
  /books:
    get:
      summary: Get all books 
      description: The returned books are ordered by updated datetime.
      parameters: 
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateStart
          description: Filter books with a release date greater than or equal to this date
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateEnd
          description: Filter books with a release date less than or equal to this date
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
    get: 
      summary: Get all authors
      description: Show all authors filter by  name.
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: Filter return authors by given name
          required: false
          schema: 
            type: string
      responses:
        200:
          description: Authors filtered
          content:
            application/json:
              schema :
                type: array
                items:
                  $ref: '#/components/schemas/author'
        404:
          description: not found !
    put:
      summary: Create || update a author
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema : 
              type: array
              items:
                $ref: '#/components/schemas/author'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
        404:
          description: Not found !
    delete:
      summary: Delete list of authors
      responses:
        200:
          description: Deleting author successfully !
        404: 
          description: Author Not found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref : '#/components/schemas/author'
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date
    author:
      type : object
      properties: 
        id:
          type: string
        name : 
          type: string
        sex: 
          type: string 
          enum:
            - M
            - F



